# For Kitty terminal start
# set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-kitty"
# set -ga terminal-overrides ",xterm-256color*:Tc"
# undercurl support
set -sg terminal-overrides ",*:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'


# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind-key C-b
set -g prefix C-s
bind -r C-s send-prefix
bind C-e last-window
setw -g mode-keys vi

set-option -g default-shell /bin/zsh
# set-option -g default-shell /opt/homebrew/bin/fish
set -s escape-time 0

bind C-r source-file ~/.tmux.conf \; display "Reloaded!"
bind C-c new-window -c "#{pane_current_path}"
bind C-k send-keys -R \; clear-history
bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

bind C-s split-window -v -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"

# Next/Prev window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
# bind-key h split-window -h "htop"
# bind h display-popup -E "htop"
# bind t display-popup -E "nvim ~/notes/tmp_notes.md"
bind t split-window -c "#{pane_current_path}" -h -l 50% "nvim ~/notes/tmp_notes.md"
bind C-t split-window -c "#{pane_current_path}" -h -l 50% "nvim ~/notes/tmp_notes.md"
bind n split-window -c "#{pane_current_path}" -v -l 50% 'vifm'

bind-key -n M-c choose-window 'join-pane -h -s "%%"'
bind-key -n M-m command-prompt -p "Search man pages for:" "new-window 'exec man %%'"

bind-key -n -N 'Toggle popup window' M-p if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 80% -h 75% -E 'tmux attach-session -t popup || tmux new-session -s popup'
}

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 5'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 5'

bind-key -T copy-mode-vi M-h resize-pane -L 5
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 5

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

bind-key b break-pane -d

# General
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g allow-rename off
set -g status-justify left
set -g status-position top
set -s escape-time 20
set-option -g history-limit 1000000

set -g focus-events on
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
set-window-option -g automatic-rename on
set-option -g automatic-rename-format ""

set-option -g mouse on

# Preven yank from scrolling to the top of your buffer after coping.
set -g @yank_action "copy-pipe"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

set -g @catppuccin_icon_window_last "󰰍 "
set -g @catppuccin_icon_window_current "󰯲 "
set -g @catppuccin_icon_window_zoom "󰰷 "
set -g @catppuccin_icon_window_mark "󰃀"
set -g @catppuccin_icon_window_silent "󰂛 "
set -g @catppuccin_icon_window_activity "󰖲 "
set -g @catppuccin_icon_window_bell "󰂞 "
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_pane_default_fill "none"

set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "no"
set -g @catppuccin_window_default_fill "none"
set -g @plugin 'catppuccin/tmux'

run '~/.tmux/plugins/tpm/tpm'

set -g status-bg default
set -g status-style bg=default
