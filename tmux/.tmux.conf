# For Kitty terminal start
# set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-kitty"
# set -ga terminal-overrides ",xterm-256color*:Tc"
# undercurl support
set -sg terminal-overrides ",*:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'


# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind-key C-b
set -g prefix C-s
bind -r C-s send-prefix
bind C-e last-window

set-option -g default-shell /bin/zsh
set -s escape-time 0

bind -r i run-shell "tmux neww tmux-cht.sh"
bind C-r source-file ~/.tmux.conf \; display "Reloaded!"
bind C-c new-window -c "#{pane_current_path}"
bind C-k send-keys -R \; clear-history
bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

bind C-s split-window -v -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"

# Next/Prev window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection
bind-key h split-window -h "htop"
bind t split-window -c "#{pane_current_path}" -h -p 50 "nvim ~/notes/tmp_notes.md"
bind C-t split-window -c "#{pane_current_path}" -h -p 50 "nvim ~/notes/tmp_notes.md"
bind n split-window -c "#{pane_current_path}" -v -p 50 'vifm'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

bind-key b break-pane -d

# General
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g allow-rename off
set -g status-justify left
set -g status-position top
set -s escape-time 20
set-option -g history-limit 1000000

set -g focus-events on
set-option -g set-titles on
set-option -g set-titles-string "#T - #W"
set-window-option -g automatic-rename on
set-option -g automatic-rename-format ""

set-option -g mouse on

# Status settings
# set -g status-fg green
# set -g status-bg black
# set -g @prefix_highlight_fg black
# set -g @prefix_highlight_bg green
# set -g @prefix_highlight_empty_prompt '    '
# # set -g status-left "#[fg=green,bg=colour236,nobold,noitalics,nounderscore]   #S #[fg=colour236,bg=black,nobold,noitalics,nounderscore]"
# set -g status-left "#[fg=green,bg=colour236,nobold,noitalics,nounderscore]   #S #[fg=colour236,bg=black,nobold,noitalics,nounderscore]"
# set -g status-left-length 250
# # set -g status-right '#{prefix_highlight} #(gitmux -cfg ~/.gitmux.conf "#{pane_current_path}") #[fg=green,bg=black] %Y-%m-%d  #[fg=colour236,bg=black,nobold,noitalics,nounderscore]#[fg=green,bg=colour236,nobold,noitalics,nounderscore] %H:%M #[fg=black,bg=blue,nobold,noitalics,nounderscore]'
# set -g status-right '#{prefix_highlight}'
# set -g status-right-length 300
#
# # Inactive window colours and settings
# set-window-option -g window-status-style fg=green,bg=black
# set -g window-status-format "#[fg=green,bg=black] #I:#W #[fg=green,bg=black]"
# set -g window-status-separator ""
#
# # Active window settings
# # set -g window-status-current-format "#[fg=black,bg=green] #I:#W #[fg=green,bg=black]"
# set -g window-status-current-format "#[fg=black,bg=green] #I:#W #[fg=green,bg=black]"
#
# # Pane colours
# set -g pane-border-lines heavy # "single", "double", "heavy", "simple", "number", NULL
# set -g pane-border-style fg=black,bg=default
# set -g pane-active-border-style fg=green,bg=default
# set -g window-style fg=white,bg=black #colour235
# set -g window-active-style fg=white,bg=black
#
# # Message colours
# set -g message-style fg=black,bg=blue
#
# set-option -g mouse on
# set-option -g set-clipboard on
# # Requirenments for MacOS (plugin tmux-yank)
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# # set -g @plugin 'tmux-plugins/tmux-open'
# # set -g @plugin 'thewtex/tmux-mem-cpu-load'
# # set -g @plugin 'tmux-plugins/tmux-copycat'
# # set -g @plugin 'laktak/extrakto'
# # set -g @plugin 'schasse/tmux-jump'
# # set -g @continuum-restore 'on'
#

set -g @catppuccin_icon_window_last "󰰍 "
set -g @catppuccin_icon_window_current "󰯲 "
set -g @catppuccin_icon_window_zoom "󰰷 "
set -g @catppuccin_icon_window_mark "󰃀"
set -g @catppuccin_icon_window_silent "󰂛 "
set -g @catppuccin_icon_window_activity "󰖲 "
set -g @catppuccin_icon_window_bell "󰂞 "

set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "no"
set -g @plugin 'catppuccin/tmux'

run '~/.tmux/plugins/tpm/tpm'

# source-file "~/.dotfiles/tmux/themes/bubbles.conf"
